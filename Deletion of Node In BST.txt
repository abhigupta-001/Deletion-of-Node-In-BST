/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

  TreeNode*findmin( TreeNode *root)
  {
      if(root==NULL)
      {
          return root;
      }
      while(root->left)
          root=root->left;
      return root;
  }

class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        
        if(root==NULL)
            return root;
        else if (key<root->val)
            root->left=  deleteNode(root->left,key);
         else if (key > root->val)
            root->right=  deleteNode(root->right,key);
        else
        {
            if(root->left==NULL && root->right ==NULL)
            {
                delete(root);
                root=NULL;
            }
            
            else if(root->left==NULL)
            {
                TreeNode *temp=  root;
                root=root->right;
                delete (root);
            }
            
            else if (root->right==NULL)
            {
                TreeNode *temp=root;
                root=root->left;
                delete (root);
                
            }
            
            else 
            {
                TreeNode *temp= findmin(root->right);
                root->val= temp->val;
                root->right= deleteNode(root->right,temp->val);
                
            }
        }
        
        return root;
    }
};